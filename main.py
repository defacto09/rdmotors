import os
import gspread
import logging
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()
print("TOKEN DEBUG:", os.getenv("TELEGRAM_API_TOKEN"))
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger()

API_TOKEN = os.getenv("TELEGRAM_API_TOKEN")
MANAGER_ID = 1376857543  # –í–∞—à ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è Google Sheets
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]
creds = ServiceAccountCredentials.from_json_keyfile_name(
    "/Users/defacto092/IMPORTANT/RDMotors IAM Admin.json", scope)
gs_client = gspread.authorize(creds)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ
def get_spreadsheet_data():
    try:
        sheet = gs_client.open("test").sheet1
        data = sheet.get_all_records(expected_headers=["–ê–í–¢–û", "–¶–Ü–ù–ê"])

        formatted = "üîπ *–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ:* üîπ\n\n"
        for r in data:
            formatted += f"üöó *{r['–ê–í–¢–û']}*\nüí∞ *–¶—ñ–Ω–∞:* {r['–¶–Ü–ù–ê']}$\n\n"
        return formatted
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ Google Sheets: {e}")
        return "‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ –±–∞–∑–∏ –∞–≤—Ç–æ."

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É Google Sheets
def save_message_to_db(user_id, username, message_text):
    try:
        sheet = gs_client.open("ClientMessages").sheet1
        sheet.append_row([str(datetime.now()), user_id, username, message_text])
        logger.info("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ–¥–∞–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.")
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

# –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.message.from_user
    user_id = user.id
    username = user.username or "(–±–µ–∑ username)"

    keyboard_texts = [
        "üì• –•–æ—á—É –∞–≤—Ç–æ –∑—ñ –°–®–ê", "‚ùìFAQ", "üìû –ö–æ–Ω—Ç–∞–∫—Ç",
        "üìã –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ", "üöó –î–µ –∞–≤—Ç–æ?"
    ]

    # –Ø–∫—â–æ —Ü–µ –∫–ª—ñ—î–Ω—Ç (–Ω–µ –º–µ–Ω–µ–¥–∂–µ—Ä)
    if user_id != MANAGER_ID:
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        save_message_to_db(user_id, username, text)

        # –ü–µ—Ä–µ—Å–∏–ª–∞—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        msg = f"‚úâÔ∏è –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @{username} (ID: {user_id}):\n{text}"
        try:
            await context.bot.send_message(chat_id=MANAGER_ID, text=msg)
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}")

        lowered = text.lower()

        # –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É ‚Äî –¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ –∫–Ω–æ–ø—Ü—ñ
        if text in keyboard_texts:
            if "–¥–µ –∞–≤—Ç–æ" in lowered:
                await update.message.reply_text(
                    "üöó –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏, –Ω–∞–¥–∞–π—Ç–µ VIN-–∫–æ–¥ –∞–±–æ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n–ú–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —ñ –ø–æ–≤—ñ–¥–æ–º–∏–º–æ –≤–∞–º –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º."
                )
            elif "—Ö–æ—á—É –∞–≤—Ç–æ –∑—ñ —Å—à–∞" in lowered:
                await update.message.reply_text(
                    "üëã –©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∞–≤—Ç–æ, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É: https://forms.gle/BXkuZr9C5qEJHijd7 "
                    "\n\n ‚ùóÔ∏è–û–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—Ä–æ–≥–ª—è–Ω—å—Ç–µ –Ω–∞—à –¥–æ–≥–æ–≤—ñ—Ä –ø–µ—Ä–µ–¥ —Ç–∏–º —è–∫ –∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏ –∞–Ω–∫–µ—Ç—É! \n –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å: /agreement"
                )
            elif "–∫–æ–Ω—Ç–∞–∫—Ç" in lowered or "—Ç–µ–ª–µ—Ñ–æ–Ω" in lowered:
                await update.message.reply_text("üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º. –¢–µ–ª–µ—Ñ–æ–Ω: +380673951195")
            elif "–≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ" in lowered or "—è–∫—ñ –∞–≤—Ç–æ" in lowered:
                await update.message.reply_text("üìã –û—Å—å —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ:\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /database")
            elif "faq" in lowered or "–ø–∏—Ç–∞–Ω–Ω—è" in lowered:
                await update.message.reply_text("–†–æ–º, –¥–µ –º–∞—à–∏–Ω–∞? - –≤–∏–±–µ—Ä—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–¥–µ –∞–≤—Ç–æ', —ñ –º–∏ –Ω–∞–¥–∞–º–æ –≤–∞–º –≤—ñ–¥–ø–æ–≤—ñ–¥—å")
        else:
            # –Ø–∫—â–æ —Ü–µ –Ω–µ –∫–Ω–æ–ø–∫–∞ ‚Äî –ø–∏—à–µ–º–æ –ø—Ä–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await update.message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.")

    # –Ø–∫—â–æ —Ü–µ –º–µ–Ω–µ–¥–∂–µ—Ä
    else:
        pass

# –ö–æ–º–∞–Ω–¥–∞ /database
async def database(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = get_spreadsheet_data()
    await update.message.reply_text(data, parse_mode="Markdown")

# –ö–æ–º–∞–Ω–¥–∞ /agreement –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Docs –¥–æ–∫—É–º–µ–Ω—Ç
# –ö–æ–º–∞–Ω–¥–∞ /agreement –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Docs –¥–æ–∫—É–º–µ–Ω—Ç –∑ –≥—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
async def agreement(update: Update, context: ContextTypes.DEFAULT_TYPE):
    agreement_link = "https://docs.google.com/document/d/1VSmsVevCBc0BCSVnsJgdkwlZRWDY_hhjIbcnzPpsOVg/edit?usp=sharing/view"  # –ó–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π ID –¥–æ–∫—É–º–µ–Ω—Ç–∞
    await update.message.reply_text(
        f"üìÑ –û—Å—å –Ω–∞—à –¥–æ–≥–æ–≤—ñ—Ä \n\n [–ü–æ—Å–∏–ª–∞–Ω–Ω—è]({agreement_link})\n\n–ü–µ—Ä–µ–¥ —Ç–∏–º —è–∫ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ñ–æ—Ä–º—É, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ —É–º–æ–≤–∞–º–∏ –¥–æ–≥–æ–≤–æ—Ä—É.",
        parse_mode="Markdown"
    )

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
def get_main_keyboard():
    return ReplyKeyboardMarkup([
        ["üì• –•–æ—á—É –∞–≤—Ç–æ –∑—ñ –°–®–ê", "‚ùìFAQ"],
        ["üöó –î–µ –∞–≤—Ç–æ?", "üìû –ö–æ–Ω—Ç–∞–∫—Ç"],
        ["üìã –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ"]
    ], resize_keyboard=True)

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –í–∞—Å –≤—ñ—Ç–∞—î –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ RDMOTORS! –û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω–µ –∑ —á–∞—Å—Ç–∏—Ö –ø–∏—Ç–∞–Ω—å –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î.",
        reply_markup=get_main_keyboard()
    )

# –ö–æ–º–∞–Ω–¥–∞ /reply
async def reply_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != MANAGER_ID:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É.")
        return

    if len(context.args) < 2:
        await update.message.reply_text("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /reply <user_id> <—Ç–µ–∫—Å—Ç>")
        return

    user_id = context.args[0]
    reply_text = " ".join(context.args[1:])
    try:
        await context.bot.send_message(chat_id=int(user_id), text=f"üì© –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n{reply_text}")
        await update.message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.")
    except Exception as e:
        logger.error(e)
        await update.message.reply_text(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è

def main():
    app = Application.builder().token(API_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("database", database))
    app.add_handler(CommandHandler("reply", reply_command))
    app.add_handler(CommandHandler("agreement", agreement))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_user_message))

    app.run_polling()

if __name__ == "__main__":
    main()
